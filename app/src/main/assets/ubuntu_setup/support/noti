#!/bin/bash

set -ue

HELP=""
NOTIFICATION_TYPE=""
CHANNEL_NUM=""
ICON_NAME=""
IMPORTANCE=""
TITLE=""
MESSAGE=""
ALERT_ONCE=""
DELETE=""
NOTIFICATION_STYLE=""
BUTTONS=""


read_args(){
	local STR=""
	while (( $# > 0 ))
	do
	case "${1}" in
		--help|-h)
			HELP="${1}"
			;;
		--notification-type|-t)
			NOTIFICATION_TYPE="${2}"
			shift
			;;
		--channel-num|-cn)
			CHANNEL_NUM="${2}"
			shift
			;;
		--icon-name|-in)
			ICON_NAME="${2}"
			shift
			;;
		--importance|-i)
			IMPORTANCE="${2}"
			shift
			;;
		--alert-once|-o)
			ALERT_ONCE="${1}"
			;;
		--title|-t)
			TITLE="${2}"
			shift
			;;
		--message|-m)
			MESSAGE="${2}"
			shift
			;;
		--delete|-d)
			DELETE="${2}"
			shift
			;;
		--notification-style|-s)
			NOTIFICATION_STYLE="${2}"
			shift
			;;
		--button|-b)
			BUTTONS="${BUTTONS}|${2}"
			shift
			;;
		-*)
			echo "no option: ${1}"
			exit 1
			;;
		*)	
			;;
	esac
	shift
	done <<- END
	$STR
	END
}

read_args "$@"

noti(){
	awk \
	-v help="${HELP}" \
	-v notificationType="${NOTIFICATION_TYPE}" \
	-v channelNum="${CHANNEL_NUM}" \
	-v iconName="${ICON_NAME}" \
	-v importance="${IMPORTANCE}" \
	-v title="${TITLE}" \
	-v message="${MESSAGE}" \
	-v alertOnce="${ALERT_ONCE}" \
	-v delete_key="${DELETE}" \
	-v notificationStyle="${NOTIFICATION_STYLE}" \
	-v button="${BUTTONS/\|/}" \
	'function concat(val, val_name){
		if(val) ouput_con = ouput_con""val_name"="val"\n"
	}
	BEGIN {
		ouput_con=""
		concat(help, "help")
		ouput_con = ouput_con"intentType=notification\n"
		concat(notificationType, "notificationType")
		concat(channelNum, "channelNum")
		concat(iconName, "iconName")
		concat(importance, "importance")
		concat(title, "title")
		concat(message, "message")
		concat(alertOnce, "alertOnce")
		concat(delete_key, "delete")
		concat(notificationStyle, "notificationStyle")
		concat(button, "button")
		gsub(",", "!", ouput_con)
		gsub(/\n/, ",\n", ouput_con)
		print ouput_con
	}' \
	| curl -X POST -d @- "${INTENT_MONITOR_ADDRESS}" 
}

readonly output="$(noti)"
case "${output}" in
	"") exit 0;;
	*) echo "${output}"
esac
test -n "${HELP}" \
	&& exit 0 \
	|| exit 1
