#!/bin/bash

set -ue

readonly support_dir_path="/support"
readonly ubuntu_env_tsv_path="${support_dir_path}/${UBUNTU_ENV_TSV_NAME}"
readonly ubuntu_env_tsv_con="$(cat "${ubuntu_env_tsv_path}")"
readonly wait_quiz_tsv_name=$(\
	tsvar "${ubuntu_env_tsv_con}" "WAIT_QUIZ_TSV_NAME" \
)
readonly wait_quiz_tsv_path="${support_dir_path}/${wait_quiz_tsv_name}"
readonly WAIT_QUIZ_TSV_CON="$(cat "${wait_quiz_tsv_path}")"
readonly WAIT_QUIZ_TSV_CON_LINES="$(echo "${WAIT_QUIZ_TSV_CON}" | wc -l)"

decide_message(){
	for i in $(seq 1 5)
	do
		local rnd_line_num="$((${RANDOM} % ${WAIT_QUIZ_TSV_CON_LINES}))"
		local wait_quiz_tsv_con_d_q_replace="${WAIT_QUIZ_TSV_CON//\,/\.}"
		local quiz_con_src=$(\
			echo "${wait_quiz_tsv_con_d_q_replace//\"/\'}" \
					| sed -n "${rnd_line_num}p"\
		)
		case "${quiz_con_src}" in
			"") 
				sleep 0.1
				continue
				;;
		esac
		echo "${quiz_con_src}"
		break;
	done
}

echo_prefix(){
	local prefix_src="${1}"
	case "${prefix_src}" in
		"") echo "" ;;
		*) echo "${prefix_src} " ;;
	esac
}

wait_quiz(){
	local target_pid=${1}
	local mark="${2:-}"
	local wait_sec=3
	local current_times=1
	local answer=""
	while kill -0 "${target_pid}" 2>/dev/null
	do
		if [ $((${current_times} % 2)) -eq 0 ];then
			toast "${answer/-/=}"
		else 
			quiz_con="$(decide_message)"
			answer="$(echo "${quiz_con}" | cut -f 2)"
			local current_sec=$((current_times * ${wait_sec}))
			local prefix=$(echo_prefix "${mark}")
			toast \
				"[${prefix}${current_sec}s] Q. $(echo "${quiz_con}" | cut -f 1)"
		fi
		sleep ${wait_sec}
		current_times=$((${current_times} + 1))
	done
	toast "ok"
}

echo_help(){
	awk 'BEGIN{
		print ""
		print "### Toast wait quiz until backgrond process complete by 3 seconds"
		print ""
		print "# Format"
		print "wqmsg \x24{arg1}  \x24{arg2}"
		print ""
		print "\targ1 -> pid"
		print "\targ2 -> mark str"
		print ""
	}'
	exit 0
}


case "${1}" in
	"--help"|"-h")
		echo_help;;
esac

wait_quiz "${@}"
